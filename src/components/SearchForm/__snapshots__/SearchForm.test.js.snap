// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App renders without crashing 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SearchForm
    fetchArticles={[MockFunction]}
    handleChange={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <Col
          md="10"
          sm="9"
          tag="div"
          widths={
            Array [
              "xs",
              "sm",
              "md",
              "lg",
              "xl",
            ]
          }
          xs="12"
        >
          <SearchInput
            handleChange={[MockFunction]}
            placeholder="Enter a search term"
          />
        </Col>,
        <Col
          md="2"
          sm="3"
          tag="div"
          widths={
            Array [
              "xs",
              "sm",
              "md",
              "lg",
              "xl",
            ]
          }
          xs="12"
        >
          <SearchButton
            handleClick={[MockFunction]}
            text="Click Me"
            theme="primary"
          />
        </Col>,
      ],
      "className": "mb-3",
      "tag": "div",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <SearchInput
            handleChange={[MockFunction]}
            placeholder="Enter a search term"
          />,
          "md": "10",
          "sm": "9",
          "tag": "div",
          "widths": Array [
            "xs",
            "sm",
            "md",
            "lg",
            "xl",
          ],
          "xs": "12",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "handleChange": [MockFunction],
            "inputVal": undefined,
            "placeholder": "Enter a search term",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <SearchButton
            handleClick={[MockFunction]}
            text="Click Me"
            theme="primary"
          />,
          "md": "2",
          "sm": "3",
          "tag": "div",
          "widths": Array [
            "xs",
            "sm",
            "md",
            "lg",
            "xl",
          ],
          "xs": "12",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "handleClick": [MockFunction],
            "text": "Click Me",
            "theme": "primary",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <Col
            md="10"
            sm="9"
            tag="div"
            widths={
              Array [
                "xs",
                "sm",
                "md",
                "lg",
                "xl",
              ]
            }
            xs="12"
          >
            <SearchInput
              handleChange={[MockFunction]}
              placeholder="Enter a search term"
            />
          </Col>,
          <Col
            md="2"
            sm="3"
            tag="div"
            widths={
              Array [
                "xs",
                "sm",
                "md",
                "lg",
                "xl",
              ]
            }
            xs="12"
          >
            <SearchButton
              handleClick={[MockFunction]}
              text="Click Me"
              theme="primary"
            />
          </Col>,
        ],
        "className": "mb-3",
        "tag": "div",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <SearchInput
              handleChange={[MockFunction]}
              placeholder="Enter a search term"
            />,
            "md": "10",
            "sm": "9",
            "tag": "div",
            "widths": Array [
              "xs",
              "sm",
              "md",
              "lg",
              "xl",
            ],
            "xs": "12",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "handleChange": [MockFunction],
              "inputVal": undefined,
              "placeholder": "Enter a search term",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <SearchButton
              handleClick={[MockFunction]}
              text="Click Me"
              theme="primary"
            />,
            "md": "2",
            "sm": "3",
            "tag": "div",
            "widths": Array [
              "xs",
              "sm",
              "md",
              "lg",
              "xl",
            ],
            "xs": "12",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "handleClick": [MockFunction],
              "text": "Click Me",
              "theme": "primary",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "disableLifecycleMethods": true,
  },
}
`;
